name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ vars.NODE_VERSION }}
      - run: npm ci
      - run: npm run lint
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ vars.NODE_VERSION }}
      - run: npm ci
      - run: docker run --name mongodb --rm -d -p 27017:27017 mongo
      - run: ./test.sh
      - run: docker stop mongodb
  release:
    name: release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: [check, test]
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ vars.NODE_VERSION }}
      - run: npm ci --ignore-scripts
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  image:
    name: image
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: [release]
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          ref: main
          fetch-depth: 0
      - run: echo "APP_VERSION=$(git describe --tags --abbrev=0 | sed -r 's/^v(.*)$/\1/')" >> "$GITHUB_OUTPUT"
        id: set-version
      - run: git checkout v${{ steps.set-version.outputs.APP_VERSION }}
      - uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
      - uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
      - uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          file: ./Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/robin-w151/orfarchiv-scraper:latest,ghcr.io/robin-w151/orfarchiv-scraper:${{ steps.set-version.outputs.APP_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
